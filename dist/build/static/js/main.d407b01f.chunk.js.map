{"version":3,"sources":["Components/Navbar.tsx","Components/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","id","Search","useState","searchTerm","setSearchTerm","type","autoComplete","onChange","e","target","value","onClick","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAQeA,MARf,WACI,OACI,qBAAKC,GAAG,SAAR,8C,OCmBOC,MAlBf,WAA8B,IAAD,EACaC,mBAAS,IADtB,mBACjBC,EADiB,KACLC,EADK,KASzB,OACI,sBAAKJ,GAAG,SAAR,UACI,uBAAOA,GAAG,aAAaK,KAAK,OAAOC,aAAa,MAAMC,SAAU,SAACC,GAAOJ,EAAcI,EAAEC,OAAOC,UAE/F,wBAAQC,QAXK,WAIjB,OAHAC,QAAQC,IAAI,aACZD,QAAQC,IAAIV,IAEL,GAOH,wB,MCOGW,MATf,WACE,OACE,sBAAKd,GAAG,MAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJSe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d407b01f.chunk.js","sourcesContent":["function Navbar():JSX.Element {\n    return(\n        <div id=\"navbar\">\n            CryptoMarketo nav bar goes here \n        </div>\n    )\n}\n\nexport default Navbar","// TODO: add search bar api here\nimport { useState } from 'react';\n\nfunction Search():JSX.Element{\n    const [ searchTerm, setSearchTerm ] = useState('')\n    const handleSearch = () => {\n        console.log('searching')\n        console.log(searchTerm)\n\n        return false;\n    }\n\n    return(\n        <div id=\"search\">\n            <input id=\"searchTerm\" type=\"text\" autoComplete=\"off\" onChange={(e) => {setSearchTerm(e.target.value)}}>\n            </input>\n            <button onClick={handleSearch}>Search</button>\n        </div>\n    )\n}\n\nexport default Search","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\"\nimport Navbar from './Components/Navbar'\nimport Search from './Components/Search'\nimport  Home  from './Components/Home'\nimport About from './Components/About'\nimport Coin from './Components/Coin'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <Navbar/>\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}