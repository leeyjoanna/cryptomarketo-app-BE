{"version":3,"sources":["components/Navbar.tsx","services/marketo.ts","components/Article.tsx","components/News.tsx","components/CoinData.tsx","components/WatchList.tsx","components/Result.tsx","components/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","id","onClick","window","location","href","services","getHome","axios","get","then","response","data","refreshList","listID","getList","createList","post","updateList","updatedList","put","getCoin","coinID","params","getCoinNews","testService","getAllServer","searchService","searchTerm","Article","articleData","className","article_url","title","author","News","coinNews","length","map","item","idx","CoinData","coinData","coinName","coinList","setCoinList","symbol","open","close","Button","variant","isInList","forEach","coin","ticker","doesExistInList","alert","undefined","newListItem","name","date","day","last_price","marketoService","concat","catch","e","console","log","WatchList","setCoinData","setCoinNews","setCoinName","setShowSearch","React","useState","anchorEl","setAnchorEl","Boolean","size","handleRefresh","aria-describedby","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","Typography","sx","p","coinItem","handleCoinClick","DeleteForeverOutlined","stopPropagation","filter","handleDelete","Result","showSearch","results","base_currency_symbol","itemName","handleCoinSelection","Search","setSearchTerm","setResults","TextField","width","type","autoComplete","onChange","target","value","ml","App","setListID","useEffect","cookies","Cookies","cookiesListID","coins","newID","uuid","set","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11b89263.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Navbar(): JSX.Element {\n  const handleHomeClick: any = () => {\n    window.location.href = \"/\";\n    return false;\n  };\n  return (\n    <div id=\"nav-bar\">\n      <div>\n        <h1 onClick={handleHomeClick}>CryptoMarketo</h1>\n      </div>\n      <div id=\"polygon-ref\">\n        Powered by <a href=\"https://polygon.io/\">Polygon.io</a>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import axios from \"axios\";\nimport { CoinDB } from \"../types\";\n\nconst getHome = () => {\n  const request = axios.get(`/`);\n  return request.then((response) => response.data);\n};\n\nconst refreshList = (listID: string) => {\n  const request = axios.get(`/api/myList/refresh/${listID}`);\n  return request.then((response) => response.data);\n};\n\nconst getList = (listID: string) => {\n  const request = axios.get(`/api/myList/${listID}`);\n  return request.then((response) => response.data);\n};\n\nconst createList = (listID: string)=> {\n  const request = axios.post(`/api/myList/${listID}`);\n  return request.then((response) => response.data);\n};\n\nconst updateList = (\n  updatedList: CoinDB[],\n  listID: string\n) => {\n  const request = axios.put(`/api/myList/${listID}`, { data: updatedList });\n  return request.then((response) => response.data);\n};\n\nconst getCoin = (coinID: string) => {\n  const request = axios.get(`/api/coin/${coinID}`, { params: coinID });\n  return request.then((response) => response.data);\n};\n\nconst getCoinNews = (coinID: string) => {\n  const request = axios.get(`api/coinNews/${coinID}`, { params: coinID });\n  return request.then((response) => response.data);\n};\n\nconst testService = ()=> {\n  const request = axios.get(`/api/testing`);\n  return request.then((response) => response.data);\n};\n\nconst searchService = (searchTerm: string) => {\n  const request = axios.get(`/api/search/`, { params: searchTerm });\n  return request.then((response) => response.data);\n};\n\nconst getAllServer = (listID: string) => {\n  const request = axios.get(`/api/${listID}`);\n  return request.then((response) => response.data);\n};\n\nconst services = {\n  getHome,\n  refreshList,\n  getList,\n  createList,\n  updateList,\n  getCoin,\n  getCoinNews,\n  testService,\n  getAllServer,\n  searchService,\n};\n\nexport default services;\n","import React from \"react\";\nimport { CoinNews } from \"../types\";\n\ntype ArticleProps = {\n  articleData: CoinNews;\n};\n/**\n * Data returns component that displays information about the coin\n * @param articleData\n * @returns\n */\n\nfunction Article({ articleData }: ArticleProps) {\n  return (\n    <div className=\"article-container\">\n      <div>\n        <a href={articleData.article_url}>{articleData.title}</a>\n      </div>\n      <div>by: {articleData.author}</div>\n      <span className=\"article-divider\">-------</span>\n    </div>\n  );\n}\n\nexport default Article;\n","import React from \"react\";\nimport { CoinNews } from \"../types\";\nimport Article from \"./Article\";\n\ntype NewsProps = {\n  coinNews: CoinNews[] | undefined;\n};\n/**\n * News returns component that list out at most 5 recent articles\n * that mention the coin's base currency symbol\n * @param coinNews\n * @returns\n */\nfunction News({ coinNews }: NewsProps) {\n  if (coinNews?.length === 0) {\n    return (\n      <div>\n        <div className=\"module-header\"> Recent articles:</div>\n        <div>No recent news about this coin!</div>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <div className=\"module-header\">Recent Articles</div>\n\n      {coinNews?.map((item, idx) => (\n        <div key={idx}>\n          <Article articleData={item} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default News;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport marketoService from \"../services/marketo\";\nimport { CoinInfo, CoinDB } from \"../types\";\nimport { Button } from \"@mui/material\";\n\ntype DataProps = {\n  listID: string;\n  coinData: CoinInfo | undefined;\n  coinName: string | undefined;\n  coinList: CoinDB[];\n  setCoinList: Dispatch<SetStateAction<CoinDB[]>>;\n};\n/**\n * Data returns component that displays information about the coin\n * @param listID\n * @param coinData\n * @param coinName\n * @param coinList\n * @param setCoinList\n * @returns\n */\nfunction CoinData({\n  listID,\n  coinData,\n  coinName,\n  coinList,\n  setCoinList,\n}: DataProps) {\n  const doesExistInList = () => {\n    let isInList = false;\n    coinList?.forEach((coin) => {\n      if (coin.ticker === coinData?.symbol) {\n        isInList = true;\n      }\n    });\n    return isInList;\n  };\n\n  const handleAddWatchList = () => {\n    if (doesExistInList()) {\n      alert(`oops, that's in your list already!`);\n      return false;\n    }\n    if (coinData !== undefined && coinName !== undefined) {\n      const newListItem: CoinDB = {\n        name: coinName,\n        ticker: coinData?.symbol,\n        date: coinData?.day,\n        last_price: coinData?.close,\n      };\n      marketoService\n        .updateList(coinList.concat(newListItem), listID)\n        .then((response) => {\n          setCoinList(coinList.concat(newListItem));\n        })\n        .catch((e) => console.log(e));\n    }\n    return false;\n  };\n  return (\n    <div>\n      <div className=\"module-header\">Coin information</div>\n      <div id=\"data-coin-symbol\">{coinData?.symbol}</div>\n      <div id=\"data-coin-name\">{coinName}</div>\n      <div id=\"data-coin-price\">\n        <div>Opening price today: ${coinData?.open}</div>\n        <div>Closing price today: ${coinData?.close}</div>\n      </div>\n      <Button variant=\"outlined\" onClick={handleAddWatchList}>\n        Add to watch list\n      </Button>\n    </div>\n  );\n}\n\nexport default CoinData;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport marketoService from \"../services/marketo\";\nimport { CoinDB, CoinInfo, CoinNews } from \"../types\";\nimport { Button, Typography, Popover } from \"@mui/material\";\nimport { DeleteForeverOutlined } from \"@mui/icons-material\";\n\ntype WatchListProps = {\n  listID: string;\n  coinList: CoinDB[];\n  setCoinList: Dispatch<SetStateAction<CoinDB[]>>;\n  coinData: CoinInfo | undefined;\n  setCoinData: Dispatch<SetStateAction<CoinInfo | undefined>>;\n  coinNews: CoinNews[];\n  setCoinNews: Dispatch<SetStateAction<CoinNews[]>>;\n  coinName: string;\n  setCoinName: Dispatch<SetStateAction<string>>;\n  setShowSearch: Dispatch<SetStateAction<boolean>>;\n};\n/**\n * WatchList returns component with user's saved coins\n * Data is dated and old until user elects to refresh the list\n *\n * @param listID\n * @param coinList\n * @param setCoinList\n * @param coinData\n * @param setCoinData\n * @param coinNews\n * @param setCoinNews\n * @param coinName\n * @param setCoinName\n *\n * @returns\n */\n\nfunction WatchList({\n  listID,\n  coinList,\n  setCoinList,\n  coinData,\n  setCoinData,\n  coinNews,\n  setCoinNews,\n  coinName,\n  setCoinName,\n  setShowSearch,\n}: WatchListProps) {\n  /** logic for popover */\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const handleRefresh = (listID: string) => {\n    marketoService\n      .refreshList(listID)\n      .then((response) => {\n        setCoinList(response);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const handleCoinClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    ticker: string,\n    name: string\n  ) => {\n    setCoinName(name);\n    marketoService.getCoin(e.currentTarget.id).then((response) => {\n      setShowSearch(false);\n      setCoinData(response);\n    });\n    marketoService.getCoinNews(e.currentTarget.id).then((response) => {\n      setCoinNews(response);\n    });\n  };\n\n  const handleDelete = (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    ticker: string\n  ) => {\n    e.stopPropagation();\n    const updatedList = coinList.filter((coin) => coin.ticker !== ticker);\n    marketoService\n      .updateList(updatedList, listID)\n      .then((response) => {\n        setCoinList(updatedList);\n      })\n      .catch((e) => console.log(e));\n    return false;\n  };\n\n  return (\n    <div>\n      <div className=\"module-header\">\n        My Watch List{\" \"}\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={(e) => handleRefresh(listID)}\n        >\n          refresh\n        </Button>\n        <Button\n          aria-describedby={id}\n          variant=\"text\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          ?\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n        >\n          <Typography sx={{ p: 2 }}>\n            API calls are limited to 5/minute, it may take some time to refresh\n            your list and update any prices.\n          </Typography>\n        </Popover>\n      </div>\n      <div>\n        {coinList?.map((coinItem, idx) => (\n          <div\n            onClick={(e) => handleCoinClick(e, coinItem.ticker, coinItem.name)}\n            className=\"watchlist-coin-container\"\n            key={idx}\n            id={coinItem.ticker}\n          >\n            <div>\n              <div className=\"watchlist-coin-name\">\n                <b>{coinItem.ticker}: </b>\n                {coinItem.name}{\" \"}\n              </div>\n              <div className=\"watchlist-coin-price\">\n                ${coinItem.last_price} as of {coinItem.date}\n              </div>\n            </div>\n            <div>\n              <DeleteForeverOutlined\n                onClick={(e) => handleDelete(e, coinItem.ticker)}\n                id={coinItem.name}\n                className=\"delete-icon\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default WatchList;\n","import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport News from \"./News\";\nimport CoinData from \"./CoinData\";\nimport WatchList from \"./WatchList\";\nimport marketoService from \"../services/marketo\";\nimport { CoinName, CoinInfo, CoinNews, CoinDB } from \"../types\";\n\ntype ResultProps = {\n  listID: string;\n  showSearch: boolean;\n  results: CoinName[];\n  coinList: CoinDB[];\n  setShowSearch: Dispatch<SetStateAction<boolean>>;\n  setCoinList: Dispatch<SetStateAction<CoinDB[]>>;\n};\n/**\n * Result returns component that lists out max 10 search results\n * Originally wanted to have search happen onChange with drop down below\n * search bar for user to click, however free-tier API limits calls to 5/min\n * making this feature not feasible\n * @param listID\n * @param showCoin\n * @param results\n * @param coinList\n * @param setShowSearch\n * @param setCoinList\n * @returns\n */\n\nfunction Result({\n  listID,\n  showSearch,\n  results,\n  coinList,\n  setShowSearch,\n  setCoinList,\n}: ResultProps) {\n  // want to set coinData to CoinInfo type\n  const [coinData, setCoinData] = useState<CoinInfo>();\n  const [coinNews, setCoinNews] = useState<CoinNews[]>([]);\n  const [coinName, setCoinName] = useState<string>(\"\");\n\n  const handleCoinSelection = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    itemName: string\n  ) => {\n    setCoinName(itemName);\n    marketoService.getCoin(e.currentTarget.id).then((response) => {\n      setShowSearch(false);\n      setCoinData(response);\n    });\n    marketoService.getCoinNews(e.currentTarget.id).then((response) => {\n      setCoinNews(response);\n    });\n  };\n  if (showSearch) {\n    if (results.length === 0) {\n      return (\n        <div id=\"no-result-msg\">No result found matching your search term.</div>\n      );\n    }\n    return (\n      <div id=\"search-results\">\n        <div>\n          {results.map((item, idx) => (\n            <div\n              key={idx}\n              className=\"result-name\"\n              id={item.base_currency_symbol}\n              onClick={(e) => handleCoinSelection(e, item.name)}\n            >\n              {item.base_currency_symbol} ({item.name})\n            </div>\n          ))}\n        </div>\n        <div className=\"info-container\" id=\"coin-watch\">\n          <WatchList\n            listID={listID}\n            coinList={coinList}\n            setCoinList={setCoinList}\n            coinData={coinData}\n            setCoinData={setCoinData}\n            coinNews={coinNews}\n            setCoinNews={setCoinNews}\n            coinName={coinName}\n            setCoinName={setCoinName}\n            setShowSearch={setShowSearch}\n          />\n        </div>\n      </div>\n    );\n  }\n  if (coinData) {\n    return (\n      <div id=\"coin-info-container\">\n        <div className=\"info-container\" id=\"coin-news\">\n          <News coinNews={coinNews} />\n        </div>\n\n        <div className=\"info-container\" id=\"coin-data\">\n          <CoinData\n            listID={listID}\n            coinData={coinData}\n            coinName={coinName}\n            coinList={coinList}\n            setCoinList={setCoinList}\n          />\n        </div>\n\n        <div className=\"info-container\" id=\"coin-watch\">\n          <WatchList\n            listID={listID}\n            coinList={coinList}\n            setCoinList={setCoinList}\n            coinData={coinData}\n            setCoinData={setCoinData}\n            coinNews={coinNews}\n            setCoinNews={setCoinNews}\n            coinName={coinName}\n            setCoinName={setCoinName}\n            setShowSearch={setShowSearch}\n          />\n        </div>\n      </div>\n    );\n  } else\n    return (\n      <div className=\"info-container\" id=\"coin-watch\">\n        <WatchList\n          listID={listID}\n          coinList={coinList}\n          setCoinList={setCoinList}\n          coinData={coinData}\n          setCoinData={setCoinData}\n          coinNews={coinNews}\n          setCoinNews={setCoinNews}\n          coinName={coinName}\n          setCoinName={setCoinName}\n          setShowSearch={setShowSearch}\n        />\n      </div>\n    );\n}\n\nexport default Result;\n","import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport marketoService from \"../services/marketo\";\nimport Result from \"./Result\";\nimport { Button, TextField } from \"@mui/material\";\nimport { CoinDB } from \"../types\";\n\ntype SearchProps = {\n  listID: string;\n  coinList: CoinDB[];\n  setCoinList: Dispatch<SetStateAction<CoinDB[]>>;\n};\n/**\n * Search returns component with text field\n * and search funciton feature\n *\n * @param listID\n * @param coinList\n * @param setCoinList\n * @returns\n */\n\nfunction Search({ listID, coinList, setCoinList }: SearchProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showSearch, setShowSearch] = useState(false);\n  const [results, setResults] = useState([]);\n\n  const handleSearch = () => {\n    marketoService.searchService(searchTerm).then((response) => {\n      setShowSearch(true);\n      setResults(response);\n    });\n    return false;\n  };\n\n  return (\n    <div>\n      <div id=\"search-component\">\n        <div id=\"search-description\">\n          Curious about a coin? Look it up here by ticker or name!\n        </div>\n        <div id=\"search\">\n          <TextField\n            sx={{ width: \"300px\" }}\n            id=\"outlined-basic\"\n            variant=\"outlined\"\n            type=\"text\"\n            autoComplete=\"off\"\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n            }}\n          ></TextField>\n          <Button\n            sx={{ ml: 4 }}\n            id=\"search-button\"\n            variant=\"contained\"\n            onClick={handleSearch}\n          >\n            Search\n          </Button>\n        </div>\n        <div id=\"results\">\n          <Result\n            listID={listID}\n            showSearch={showSearch}\n            results={results}\n            setShowSearch={setShowSearch}\n            coinList={coinList}\n            setCoinList={setCoinList}\n          />\n          {/* <div className=\"info-container\" id=\"coin-list\">\n                        <WatchList listID={listID} coinList={coinList} setCoinList={setCoinList}/>\n                    </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Navbar from \"./components/Navbar\";\nimport Search from \"./components/Search\";\nimport marketoService from \"./services/marketo\";\nimport { CoinDB } from \"./types\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./App.css\";\n\nfunction App() {\n  const [coinList, setCoinList] = useState<CoinDB[]>([]);\n  const [listID, setListID] = useState<string>(\"\");\n\n  const hook = () => {\n    const cookies = new Cookies();\n    const cookiesListID = cookies.get(\"marketoListID\");\n    if (cookiesListID) {\n      setListID(cookiesListID);\n      marketoService\n        .getList(cookiesListID)\n        .then((response) => {\n          setCoinList(response.coins);\n        })\n        .catch((e) => console.log(e));\n    } else {\n      const newID: string = uuid();\n      cookies.set(\"marketoListID\", newID, { path: \"/\" });\n      setListID(newID);\n      marketoService\n        .createList(newID)\n        .then((response) => {\n          setCoinList(response.coins);\n        })\n        .catch((e) => console.log(e));\n    }\n  };\n\n  useEffect(hook, []);\n\n  return (\n    <div id=\"App\">\n      <Navbar />\n      <Search listID={listID} coinList={coinList} setCoinList={setCoinList} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}