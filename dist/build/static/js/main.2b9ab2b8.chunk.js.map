{"version":3,"sources":["components/Navbar.tsx","services/marketo.ts","components/Article.tsx","components/News.tsx","components/CoinData.tsx","components/WatchList.tsx","components/Result.tsx","components/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","id","onClick","console","log","window","location","href","services","getHome","axios","get","then","response","data","refreshList","listID","getList","createList","post","updateList","updatedList","put","getCoin","coinID","params","getCoinNews","testService","getAllServer","searchService","searchTerm","Article","articleData","className","article_url","title","author","News","coinNews","length","map","item","idx","CoinData","coinData","coinName","coinList","setCoinList","symbol","open","close","Button","variant","isInList","forEach","coin","ticker","doesExistInList","alert","undefined","newListItem","name","date","day","last_price","marketoService","concat","catch","e","WatchList","setCoinData","setCoinNews","setCoinName","setShowSearch","React","useState","anchorEl","setAnchorEl","Boolean","size","handleRefresh","aria-describedby","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","Typography","sx","p","coinItem","handleCoinClick","DeleteForeverOutlined","stopPropagation","filter","handleDelete","Result","showSearch","results","base_currency_symbol","itemName","handleCoinSelection","Search","setSearchTerm","setResults","TextField","width","type","autoComplete","onChange","target","value","ml","App","setListID","useEffect","cookies","Cookies","cookiesListID","coins","newID","uuid","set","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b9ab2b8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Navbar():JSX.Element {\n    const handleHomeClick:any = () => {\n        console.log('home')\n        window.location.href='/'\n        return false\n    }\n    return(\n        <div id=\"nav-bar\">\n            <div><h1 onClick={handleHomeClick}>CryptoMarketo</h1></div>\n            <div id=\"polygon-ref\">Powered by <a href=\"https://polygon.io/\">Polygon.io</a></div>\n        </div>\n    )\n}\n\nexport default Navbar","import axios from 'axios'\nimport { CoinDB } from '../types'\n\nconst getHome = () => {\n    const request = axios.get(`/`)\n    return request.then(response => response.data)\n}\n\nconst refreshList = (listID:string) => {\n    const request = axios.get(`/api/myList/refresh/${listID}`)\n    return request.then(response => response.data)\n}\nconst getList = (listID:string) => {\n    const request = axios.get(`/api/myList/${listID}`)\n    return request.then(response => response.data)\n}\n\nconst createList = (listID:string) => {\n    const request = axios.post(`/api/myList/${listID}`)\n    return request.then(response => response.data)\n}\n\nconst updateList = (updatedList:CoinDB[], listID:string) => {\n    const request = axios.put(`/api/myList/${listID}`, {data: updatedList})\n    return request.then(response => response.data)\n}\n\nconst getCoin = (coinID:string) => {\n    const request = axios.get(`/api/coin/${coinID}`, {params: coinID})\n    return request.then(response => response.data)\n} \n\nconst getCoinNews = (coinID:string) => {\n    const request = axios.get(`api/coinNews/${coinID}`, {params: coinID})\n    return request.then(response => response.data)\n}\n\nconst testService = () => {\n    const request = axios.get(`/api/testing`);\n    return request.then(response => response.data)\n}\n\nconst searchService = (searchTerm:string) => {\n    const request = axios.get(`/api/search/`, {params: searchTerm})\n    return request.then(response => response.data)\n}\n\nconst getAllServer = (listID:string) => {\n    const request = axios.get(`/api/${listID}`)\n    return request.then(response => response.data)\n}\n\nconst services = {\n    getHome,\n    refreshList,\n    getList,\n    createList,\n    updateList,  \n    getCoin,\n    getCoinNews,\n    testService,\n    getAllServer,\n    searchService\n};\n\nexport default services;","import React from 'react'\nimport {CoinNews} from '../types'\n\ntype ArticleProps = {\n    articleData: CoinNews;\n}\n/**\n * Data returns component that displays information about the coin\n * @param articleData\n * @returns \n */\n\nfunction Article({articleData}:ArticleProps){\n    return(\n        <div className=\"article-container\">\n            <div><a href={articleData.article_url}>{articleData.title}</a></div>\n            <div>by: {articleData.author}</div>\n            <span className=\"article-divider\">-------</span>\n        </div>\n    )\n}\n\nexport default Article","import React from 'react';\nimport {CoinNews} from '../types'\nimport Article from './Article'\n\ntype NewsProps = {\n    coinNews: CoinNews[] | undefined,\n}\n/**\n * News returns component that list out at most 5 recent articles\n * that mention the coin's base currency symbol\n * @param coinNews \n * @returns \n */\nfunction News({coinNews}:NewsProps){\n    if(coinNews?.length === 0){\n        return (\n            <div> \n                <div className=\"module-header\"> Recent articles:</div>\n                <div>No recent news about this coin!</div>\n            </div>\n        )\n    }\n    return(\n        <div>\n            <div className=\"module-header\">Recent Articles</div>\n            \n            {coinNews?.map((item, idx) => <div key={idx}><Article articleData={item}/></div>)}\n        </div>\n    )\n}\n\nexport default News","import React, {Dispatch, SetStateAction} from 'react';\nimport marketoService from '../services/marketo'\nimport {CoinInfo, CoinDB} from '../types'\nimport { Button } from '@mui/material'\n\ntype DataProps = {\n    listID: string,\n    coinData: CoinInfo | undefined,\n    coinName: string | undefined,\n    coinList: CoinDB[],\n    setCoinList: Dispatch<SetStateAction<CoinDB[]>>\n}\n/**\n * Data returns component that displays information about the coin\n * @param listID\n * @param coinData \n * @param coinName\n * @param coinList\n * @param setCoinList\n * @returns \n */\nfunction CoinData({listID, coinData, coinName, coinList, setCoinList}:DataProps){\n    const doesExistInList = () => {\n        let isInList = false;\n        coinList?.forEach((coin)=> {\n            if(coin.ticker === coinData?.symbol){\n                isInList= true\n            }\n        })\n        return isInList;\n    }\n\n    const handleAddWatchList = () => {\n        if(doesExistInList()){\n            alert(`oops, that's in your list already!`)\n            return false;\n        }\n        if(coinData!==undefined && coinName!==undefined){\n            let newListItem:CoinDB = {\n                name: coinName,\n                ticker: coinData?.symbol,\n                date: coinData?.day,\n                last_price: coinData?.close\n            }\n            marketoService\n                .updateList(coinList.concat(newListItem), listID)\n                .then(response => {\n                    console.log('updated', response);\n                    console.log(setCoinList);\n                    setCoinList(coinList.concat(newListItem));\n                })\n                .catch(e => console.log(e))\n\n        }\n        return false;\n    }\n    return(\n        <div>\n            <div className=\"module-header\">Coin information</div>\n            <div id=\"data-coin-symbol\">{coinData?.symbol}</div>\n            <div id=\"data-coin-name\">{coinName}</div>\n            <div id=\"data-coin-price\">\n                <div>Opening price today: ${coinData?.open}</div>\n                <div>Closing price today: ${coinData?.close}</div>\n            </div>\n            <Button variant=\"outlined\" onClick={handleAddWatchList}>Add to watch list</Button>\n        </div>\n        \n    )\n}\n\nexport default CoinData","import React, {Dispatch, SetStateAction} from 'react';\nimport marketoService from '../services/marketo'\nimport {CoinDB, CoinInfo, CoinNews} from '../types'\nimport {Button, Typography, Popover} from '@mui/material'\nimport {DeleteForeverOutlined} from '@mui/icons-material'\n\ntype WatchListProps = {\n    listID: string,\n    coinList: CoinDB[],\n    setCoinList: Dispatch<SetStateAction<CoinDB[]>>,\n    coinData: CoinInfo | undefined,\n    setCoinData: Dispatch<SetStateAction<CoinInfo | undefined>>,\n    coinNews: CoinNews[],\n    setCoinNews: Dispatch<SetStateAction<CoinNews[]>>,\n    coinName: string,\n    setCoinName: Dispatch<SetStateAction<string>>,\n    setShowSearch: Dispatch<SetStateAction<boolean>>,\n}\n/**\n * WatchList returns component with user's saved coins\n * Data is dated and old until user elects to refresh the list\n * \n * @param listID\n * @param coinList \n * @param setCoinList\n * @param coinData\n * @param setCoinData\n * @param coinNews\n * @param setCoinNews\n * @param coinName\n * @param setCoinName\n * \n * @returns \n */\n\nfunction WatchList({listID, coinList, setCoinList, coinData, setCoinData, coinNews, setCoinNews, coinName, setCoinName, setShowSearch}:WatchListProps){\n    /** logic for popover */\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n    setAnchorEl(null);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const handleRefresh = (listID:string) => {\n        marketoService\n            .refreshList(listID)\n            .then(response => {\n                console.log(response);\n                setCoinList(response);\n            })\n            .catch((e) => console.log(e))\n    }\n\n    const handleCoinClick = (e:React.MouseEvent<HTMLDivElement, MouseEvent>, ticker:string, name:string) => {\n            console.log('clicked this', e.currentTarget.id)\n            setCoinName(name)\n            marketoService\n                .getCoin(e.currentTarget.id)\n                .then(response => {\n                    console.log('coin search', response);\n                    setShowSearch(false);\n                    setCoinData(response);\n                })\n            marketoService\n            .getCoinNews(e.currentTarget.id)\n            .then(response => {\n                console.log('coin news', response);\n                setCoinNews(response)\n            })\n    }\n\n    const handleDelete = (e:React.MouseEvent<SVGSVGElement, MouseEvent>, ticker:string) => {\n        e.stopPropagation();\n        let updatedList = coinList.filter((coin) => coin.ticker !== ticker)\n        marketoService\n            .updateList(updatedList, listID)\n            .then(response => {\n                console.log(response);\n                setCoinList(updatedList);\n            })\n            .catch((e) => console.log(e))\n        return false;\n    }\n\n    return(\n        <div>\n            <div className=\"module-header\">My Watch List <Button variant=\"outlined\" size=\"small\" onClick={(e) => handleRefresh(listID)}>refresh</Button>\n                    <Button aria-describedby={id} variant=\"text\" size=\"small\" onClick={handleClick}>?</Button>\n                    <Popover\n                        id={id}\n                        open={open}\n                        anchorEl={anchorEl}\n                        onClose={handleClose}\n                        anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                        }}\n                    >\n                    <Typography sx={{ p: 2 }}>API calls are limited to 5/minute, it may take some time to refresh your list and update any prices.</Typography>\n                     </Popover>\n            </div>\n            <div>\n                {coinList?.map((coinItem, idx) => (\n                    <div onClick={(e) => handleCoinClick(e, coinItem.ticker, coinItem.name)} className=\"watchlist-coin-container\" key={idx} id={coinItem.ticker}> \n                    <div>\n                        <div className=\"watchlist-coin-name\"><b>{coinItem.ticker}: </b>{coinItem.name} </div>\n                        <div className=\"watchlist-coin-price\">${coinItem.last_price} as of {coinItem.date}</div>\n                    </div>\n                    <div><DeleteForeverOutlined onClick={(e) => handleDelete(e, coinItem.ticker)} id={coinItem.name} className=\"delete-icon\"/></div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default WatchList","import React, {Dispatch, SetStateAction, useState} from \"react\"\nimport News from './News'\nimport CoinData from './CoinData'\nimport WatchList from './WatchList'\nimport marketoService from '../services/marketo'\nimport {CoinName, CoinInfo, CoinNews, CoinDB} from '../types'\n\n\ntype ResultProps = {\n    listID: string,\n    showSearch: boolean,\n    results: CoinName[],\n    coinList: CoinDB[],\n    setShowSearch: Dispatch<SetStateAction<boolean>>\n    setCoinList: Dispatch<SetStateAction<CoinDB[]>>\n}\n/**\n * Result returns component that lists out max 10 search results\n * Originally wanted to have search happen onChange with drop down below\n * search bar for user to click, however free-tier API limits calls to 5/min\n * making this feature not feasible\n * @param listID\n * @param showCoin \n * @param results\n * @param coinList\n * @param setShowSearch\n * @param setCoinList\n * @returns \n */\n\nfunction Result({listID, showSearch, results, coinList, setShowSearch, setCoinList}:ResultProps) {\n    // want to set coinData to CoinInfo type \n    const [coinData, setCoinData] = useState<CoinInfo>()\n    const [coinNews, setCoinNews] = useState<CoinNews[]>([])\n    const [coinName, setCoinName] = useState<string>('')\n\n    const handleCoinSelection = (e:React.MouseEvent<HTMLDivElement, MouseEvent>, itemName:string) => {\n        console.log('clicked this', e.currentTarget.id)\n        setCoinName(itemName)\n        marketoService\n        .getCoin(e.currentTarget.id)\n        .then(response => {\n            console.log('coin search', response);\n            setShowSearch(false);\n            setCoinData(response);\n        })\n        marketoService\n        .getCoinNews(e.currentTarget.id)\n        .then(response => {\n            console.log('coin news', response);\n            setCoinNews(response)\n        })\n    }\n    console.log('inside result', results)\n    if(showSearch){\n        if(results.length === 0){\n            return(<div id=\"no-result-msg\">No result found matching your search term.</div>)\n        }\n        return(\n            <div id=\"search-results\">\n                <div>\n                {results.map((item, idx) => <div key={idx} className=\"result-name\" id={item.base_currency_symbol} onClick={(e) => handleCoinSelection(e, item.name)}>{item.base_currency_symbol} ({item.name})!!</div>)}\n                </div>\n                <div className=\"info-container\" id=\"coin-watch\">\n                    <WatchList listID={listID} coinList={coinList} setCoinList={setCoinList} coinData={coinData} setCoinData={setCoinData} coinNews={coinNews} setCoinNews={setCoinNews} coinName={coinName} setCoinName={setCoinName} setShowSearch={setShowSearch}/>\n                </div>\n            </div>\n            \n        )\n    }\n    if (coinData){\n        return(\n            <div id=\"coin-info-container\">\n\n                <div className=\"info-container\" id=\"coin-news\">\n                    <News coinNews={coinNews}/>\n                </div>\n\n                <div className=\"info-container\" id=\"coin-data\">\n                    <CoinData listID={listID} coinData={coinData} coinName={coinName} coinList={coinList} setCoinList={setCoinList}/>\n                </div>\n\n                <div className=\"info-container\" id=\"coin-watch\">\n                    <WatchList listID={listID} coinList={coinList} setCoinList={setCoinList} coinData={coinData} setCoinData={setCoinData} coinNews={coinNews} setCoinNews={setCoinNews} coinName={coinName} setCoinName={setCoinName} setShowSearch={setShowSearch}/>\n                </div>\n            </div>\n        )\n    }\n    else return (\n        <div className=\"info-container\" id=\"coin-watch\">\n            <WatchList listID={listID} coinList={coinList} setCoinList={setCoinList} coinData={coinData} setCoinData={setCoinData} coinNews={coinNews} setCoinNews={setCoinNews} coinName={coinName} setCoinName={setCoinName} setShowSearch={setShowSearch}/>\n        </div>\n    )\n    \n}\n\nexport default Result","import React, {Dispatch, SetStateAction, useState} from \"react\"\nimport marketoService from '../services/marketo'\nimport Result from './Result'\nimport { Button, TextField } from '@mui/material';\nimport {CoinDB} from '../types'\n\n\ntype SearchProps = {\n    listID: string,\n    coinList: CoinDB[],\n    setCoinList: Dispatch<SetStateAction<CoinDB[]>>\n}\n/**\n * Search returns component with text field \n * and search funciton feature\n * \n * @param listID\n * @param coinList \n * @param setCoinList\n * @returns \n */\n\nfunction Search({listID, coinList, setCoinList}:SearchProps){\n    const [ searchTerm, setSearchTerm ] = useState('')\n    const [ showSearch, setShowSearch ] = useState(false)\n    const [ results, setResults ] = useState([])\n\n    const handleSearch = () => {\n        console.log('searching')\n        console.log(searchTerm)\n        marketoService\n            .searchService(searchTerm)\n            .then(response => {\n                console.log('search result', response);\n                setShowSearch(true)\n                setResults(response)\n            })\n        return false;\n    }\n\n    return(\n        <div>\n            <div id=\"search-component\">\n                <div id=\"search-description\">Curious about a coin? Look it up here by ticker or name!</div>\n                <div id=\"search\">\n                    <TextField sx={{ width: '300px' }} id=\"outlined-basic\" variant=\"outlined\" type=\"text\" autoComplete=\"off\" onChange={(e) => {setSearchTerm(e.target.value)}}>\n                    </TextField>\n                    <Button sx={{ ml: 4 }} id=\"search-button\" variant=\"contained\" onClick={handleSearch}>Search</Button>\n                </div>\n                <div id=\"results\">\n                    <Result listID={listID} showSearch={showSearch} results={results} setShowSearch={setShowSearch} coinList={coinList} setCoinList={setCoinList}/>\n                    {/* <div className=\"info-container\" id=\"coin-list\">\n                        <WatchList listID={listID} coinList={coinList} setCoinList={setCoinList}/>\n                    </div> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search","import { useState, useEffect } from 'react';\nimport Cookies from 'universal-cookie'\nimport Navbar from './components/Navbar'\nimport Search from './components/Search'\nimport marketoService from './services/marketo'\nimport { CoinDB } from './types';\nimport { v4 as uuid } from 'uuid'\nimport './App.css';\n\nfunction App() {\n  const [coinList, setCoinList] = useState<CoinDB[]>([])\n  const [listID, setListID] = useState<string>('')\n  console.log('HHH', coinList);\n\n  const hook = () => {\n    const cookies = new Cookies()\n    const cookiesListID = cookies.get('marketoListID')\n    if(cookiesListID){\n      console.log('cookies found', cookiesListID);\n      setListID(cookiesListID)\n      marketoService\n        .getList(cookiesListID)\n        .then(response => {\n          setCoinList(response.coins)\n        })\n        .catch((e) => console.log(e))\n    }\n    else{\n      const newID:string = uuid();\n      console.log('cookies not found', newID);\n      cookies.set('marketoListID', newID, { path: '/'})\n      setListID(newID)\n      marketoService\n        .createList(newID)\n        .then(response => {\n          setCoinList(response.coins)\n        })\n        .catch((e) => console.log(e))\n    }\n  }\n\n  useEffect(hook, [])\n\n  return (\n    <div id=\"App\">\n      <Navbar/>\n      <Search listID={listID} coinList={coinList} setCoinList={setCoinList}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}